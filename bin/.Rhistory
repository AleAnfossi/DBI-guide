minPts<-ceiling(nrow(mydata)/10)
#getting dbscan labels
dbsc_lab<-dbscan_labels(mydata,eps,minPts)
installed_packages <- installed.packages()[, "Package"]
for (pkg in installed_packages) { suppressPackageStartupMessages(library(pkg, character.only = TRUE)) }
library(translations, lib.loc = "C:/Program Files/R/R-4.3.3/library")
#Script where I load an EHRs document(neuroblastoma) and apply
#the clustering algorithms and my DBI function.
#Then I save everything on a couple of csv files
#I had to get rid of several void rows in the end of the file
#Loading data
mydata<-read.csv("neuroblastoma.csv")
#getting kmeans labels
km_labels<-kmeans_labels(mydata)
#getting hclust labels
hc_labels<-hclust_labels(mydata)
#Getting dbscan parameters
distances <- dist(mydata)
# Find the maximum distance (diameter)
diameter <- max(distances)
eps<-diameter/10
minPts<-ceiling(nrow(mydata)/10)
#getting dbscan labels
dbsc_lab<-dbscan_labels(mydata,eps,minPts)
# Calculate the four indexes
indexes<-DBI_EHRs(mydata,km_labels,hc_labels,dbsc_lab)
mydata<-read.csv("neuroblastoma.csv")
km_labels<-kmeans_labels(mydata)
hc_labels<-hclust_labels(mydata)
distances <- dist(mydata)
diameter <- max(distances)
eps<-diameter/10
minPts<-ceiling(nrow(mydata)/10)
dbsc_lab<-dbscan_labels(mydata,eps,minPts)
indexes<-DBI_EHRs(mydata,km_labels,hc_labels,dbsc_lab)
kmeans2 <- DBI(data,km_labels$kmeans_result_2)
kmeans3 <- DBI(data,km_labels$kmeans_result_3)
kmeans5 <- DBI(data,km_labels$kmeans_result_5)
hc_ave  <- DBI(data, hc_labels$labels_average)
hc_comp <- DBI(data, hc_labels$labels_complete)
hc_sing <- DBI(data, hc_labels$labels_single)
dbscan_smal_labeled_data <- fix_sets(data, t(dbsc_lab$dbscan_smal))
dbscan_med_labeled_data  <- fix_sets(data, t(dbsc_lab$dbscan_med))
dbscan_big_labeled_data  <- fix_sets(data, t(dbsc_lab$dbscan_big))
dbscan_smal <-  DBI(dbscan_smal_labeled_data$data,dbscan_smal_labeled_data$labels)
dbscan_med  <-  DBI(dbscan_med_labeled_data$data,dbscan_med_labeled_data$labels)
dbscan_big  <-  DBI(dbscan_big_labeled_data$data,dbscan_big_labeled_data$labels)
View(dbscan_big_labeled_data)
dbscan_big_labeled_data$data
dbscan_big_labeled_data$labels
t<-dbscan_big_labeled_data$labels
tt<-dbscan_big_labeled_data$data
View(tt)
classkm_labels$kmeans_result_2
class(km_labels$kmeans_result_2)
class(tt)
as.integer(tt)
as.matrix(tt)
class(t)
class(dbscan_big_labeled_data$data)
non_zero_indices <- which(dbsc_l != 0)
t<-  non_zero_indices <- which(dbsc_l != 0)
filtered_data <- data[non_zero_indices, ]
class(filtered_data)
source("~/GitHub/DBI-guide/bin/fix_sets.R")
indexes<-DBI_EHRs(mydata,km_labels,hc_labels,dbsc_lab)
class(dbscan_smal_labeled_data$data)
source("~/GitHub/DBI-guide/bin/fix_sets.R")
indexes<-DBI_EHRs(mydata,km_labels,hc_labels,dbsc_lab)
dbscan_smal_labeled_data <- fix_sets(data, t(dbsc_lab$dbscan_smal))
dbscan_smal <-  DBI(dbscan_smal_labeled_data$data,dbscan_smal_labeled_data$labels)
class(dbscan_smal_labeled_data$data)
source("~/GitHub/DBI-guide/bin/fix_sets.R")
dbscan_smal_labeled_data <- fix_sets(data, t(dbsc_lab$dbscan_smal))
dbscan_smal <-  DBI(dbscan_smal_labeled_data$data,dbscan_smal_labeled_data$labels)
class(dbscan_smal_labeled_data$data)
source("~/GitHub/DBI-guide/bin/fix_sets.R")
dbscan_smal_labeled_data <- fix_sets(data, t(dbsc_lab$dbscan_smal))
dbscan_smal <-  DBI(dbscan_smal_labeled_data$data,dbscan_smal_labeled_data$labels)
source("~/GitHub/DBI-guide/bin/fix_sets.R")
dbscan_smal_labeled_data <- fix_sets(data, t(dbsc_lab$dbscan_smal))
dbscan_smal <-  DBI(dbscan_smal_labeled_data$data,dbscan_smal_labeled_data$labels)
source("~/GitHub/DBI-guide/bin/fix_sets.R")
dbscan_smal_labeled_data <- fix_sets(data, t(dbsc_lab$dbscan_smal))
dbscan_smal <-  DBI(dbscan_smal_labeled_data$data,dbscan_smal_labeled_data$labels)
class(dbscan_smal_labeled_data$data)
class(dbscan_smal_labeled_data$labels)
dbscan_smal <-  DBI(dbscan_smal_labeled_data$data,dbscan_smal_labeled_data$labels)
source("~/GitHub/DBI-guide/bin/DBI_EHRs.R")
source("~/GitHub/DBI-guide/bin/fix_sets.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
dim(dbscan_smal_labeled_data$labels)
t<-dbscan_smal_labeled_data$labels
dim(dbscan_smal_labeled_data$data)
nrows(dbscan_smal_labeled_data$labels)
nrow(t)
ncol(t)
length(t)
t
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
mydata<-read.csv("neuroblastoma.csv")
#getting kmeans labels
km_labels<-kmeans_labels(mydata)
#getting hclust labels
hc_labels<-hclust_labels(mydata)
#Getting dbscan parameters
distances <- dist(mydata)
# Find the maximum distance (diameter)
diameter <- max(distances)
eps<-diameter/10
minPts<-ceiling(nrow(mydata)/20)
dbsc_lab<-dbscan_labels(mydata,eps,minPts)
source("~/GitHub/DBI-guide/bin/fix_sets.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/dbscan_labels.R")
source("~/GitHub/DBI-guide/bin/dbscan_labels.R")
source("~/GitHub/DBI-guide/bin/dbscan_labels.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
dbscan_smal <- dbscan(data, eps=0.5, minPts = 5, weights = NULL, borderPoints = TRUE)$cluster
dbscan_smal
dbscan_smal <- dbscan(data, eps=0.5, minPts = 20, weights = NULL, borderPoints = TRUE)$cluster
dbscan_smal
dbscan_smal <- dbscan(data, eps=0.3, minPts = 20, weights = NULL, borderPoints = TRUE)$cluster
dbscan_smal
dbscan_smal <- dbscan(data, eps=0.1, minPts = 20, weights = NULL, borderPoints = TRUE)$cluster
dbscan_smal
dbscan_smal <- dbscan(data, eps=0.5, minPts = 3, weights = NULL, borderPoints = TRUE)$cluster
dbscan_smal
diam(mydata)
distances <- dist(mydata)
diameter <- max(distances)
diameter
dbscan_smal <- dbscan(data, eps=1, minPts = 5, weights = NULL, borderPoints = TRUE)$cluster
dbscan_smal
dbscan_smal <- dbscan(data, eps=1, minPts = 3, weights = NULL, borderPoints = TRUE)$cluster
dbscan_smal
source("~/GitHub/DBI-guide/bin/dbscan_labels.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
# Assuming you have a dataset called `data`
kNNdistplot(mydata, k = 4) # k is usually set to minPts - 1
abline(h = some_threshold, col = "red") # Manually choose a threshold
dbscan_smal <- dbscan(data, eps=5, minPts = 4, weights = NULL, borderPoints = TRUE)$cluster
dbscan_smal
dbscan_smal <- dbscan(data, eps=4, minPts = 4, weights = NULL, borderPoints = TRUE)$cluster
dbscan_smal
dbscan_smal <- dbscan(data, eps=3, minPts = 4, weights = NULL, borderPoints = TRUE)$cluster
dbscan_smal
dbscan_smal <- dbscan(data, eps=2, minPts = 4, weights = NULL, borderPoints = TRUE)$cluster
dbscan_smal
source("~/GitHub/DBI-guide/bin/findelbow.R")
kNNdistplot(mydata, k = 4) # k is usually set to minPts - 1
abline(h = some_threshold, col = "red") # Manually choose a threshold
kNNdistplot(mydata, k = 4) # k is usually set to minPts - 1
kNNdistplot(mydata, k = 4) # k is usually set to minPts - 1
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
dbscan_smal <- dbscan(data, eps=3, minPts = 10, weights = NULL, borderPoints = TRUE)$cluster
dbscan_smal
installed_packages <- installed.packages()[, "Package"]
for (pkg in installed_packages) { suppressPackageStartupMessages(library(pkg, character.only = TRUE)) }
library(translations, lib.loc = "C:/Program Files/R/R-4.3.3/library")
source("~/GitHub/DBI-guide/bin/dbscan_labels.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/fix_sets.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/fix_sets.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
# Assuming you have a dataset called `data`
kNNdistplot(mydata, k = 10) # k is usually set to minPts - 1
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/fix_sets.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
kmeans2 <- DBI(data,km_labels$kmeans_result_2)
kmeans3 <- DBI(data,km_labels$kmeans_result_3)
kmeans5 <- DBI(data,km_labels$kmeans_result_5)
hc_ave  <- DBI(data, hc_labels$labels_average)
hc_comp <- DBI(data, hc_labels$labels_complete)
hc_sing <- DBI(data, hc_labels$labels_single)
#Getting rid of outliers with dbscan
dbscan_smal_labeled_data <- fix_sets(data, t(dbsc_lab$dbscan_smal))
dbscan_smal <-  DBI(dbscan_smal_labeled_data$data,dbscan_smal_labeled_data$labels)
dbscan_smal_labeled_data$data
class(dbscan_smal_labeled_data$data)
t<-dbscan_smal_labeled_data$data
tt<-dbscan_smal_labeled_data$labels
class(tt)
dim(t)
length(tt)
t(tt)
dbscan_smal <-  DBI(dbscan_smal_labeled_data$data,t(dbscan_smal_labeled_data$labels))
source("~/GitHub/DBI-guide/bin/DBI_EHRs.R")
installed_packages <- installed.packages()[, "Package"]
for (pkg in installed_packages) { suppressPackageStartupMessages(library(pkg, character.only = TRUE)) }
library(translations, lib.loc = "C:/Program Files/R/R-4.3.3/library")
mydata<-read.csv("neuroblastoma.csv")
km_labels<-kmeans_labels(mydata)
hc_labels<-hclust_labels(mydata)
distances <- dist(mydata)
eps<- 4           #diameter/100
minPts<-10            #ceiling(nrow(mydata)/50)
dbsc_lab<-dbscan_labels(mydata,eps,minPts)
indexes<-DBI_EHRs(mydata,km_labels,hc_labels,dbsc_lab)
View(dbsc_labels)
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/fix_sets.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
#Script where I load an EHRs document(neuroblastoma) and apply
#the clustering algorithms and my DBI function.
#Then I save everything on a couple of csv files
#I had to get rid of several void rows in the end of the file
#Loading data
mydata<-read.csv("neuroblastoma.csv")
#getting kmeans labels
km_labels<-kmeans_labels(mydata)
#getting hclust labels
hc_labels<-hclust_labels(mydata)
#Getting dbscan parameters
eps<- 3           #diameter/100
minPts<-10            #ceiling(nrow(mydata)/50)
#getting dbscan labels
dbsc_lab<-dbscan_labels(mydata,eps,minPts)
# Calculate the four indexes
indexes<-DBI_EHRs(mydata,km_labels,hc_labels,dbsc_lab)
#binding clusterings for printing
labels<-cbind(mydata,km_labels,hc_labels,dbsc_labels)
# Add name for saving!! This is the data csv print
write.csv(mydata, file="neuroblastoma+labels.csv")
# Add name for saving!! This is the DBI evaluation csv print
write.csv(indexes, file="neuroblastoma_DBI.csv")
source("~/GitHub/DBI-guide/bin/fix_sets.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
#Script where I load an EHRs document(neuroblastoma) and apply
#the clustering algorithms and my DBI function.
#Then I save everything on a couple of csv files
#I had to get rid of several void rows in the end of the file
#Loading data
mydata<-read.csv("neuroblastoma.csv")
#getting kmeans labels
km_labels<-kmeans_labels(mydata)
#getting hclust labels
hc_labels<-hclust_labels(mydata)
#Getting dbscan parameters
eps<- 3.5          #diameter/100
minPts<-10            #ceiling(nrow(mydata)/50)
#getting dbscan labels
dbsc_lab<-dbscan_labels(mydata,eps,minPts)
# Calculate the four indexes
indexes<-DBI_EHRs(mydata,km_labels,hc_labels,dbsc_lab)
#binding clusterings for printing
labels<-cbind(mydata,km_labels,hc_labels,dbsc_labels)
# Add name for saving!! This is the data csv print
write.csv(mydata, file="neuroblastoma+labels.csv")
# Add name for saving!! This is the DBI evaluation csv print
write.csv(indexes, file="neuroblastoma_DBI.csv")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
#Script where I load an EHRs document(neuroblastoma) and apply
#the clustering algorithms and my DBI function.
#Then I save everything on a couple of csv files
#I had to get rid of several void rows in the end of the file
#Loading data
mydata<-read.csv("neuroblastoma.csv")
#getting kmeans labels
km_labels<-kmeans_labels(mydata)
#getting hclust labels
hc_labels<-hclust_labels(mydata)
#Getting dbscan parameters
eps<- 3.5          #diameter/100
minPts<-10            #ceiling(nrow(mydata)/50)
#getting dbscan labels
dbsc_lab<-dbscan_labels(mydata,eps,minPts)
# Calculate the four indexes
indexes<-DBI_EHRs(mydata,km_labels,hc_labels,dbsc_lab)
#binding clusterings for printing
labels<-cbind(mydata,km_labels,hc_labels,dbsc_labels)
# Add name for saving!! This is the data csv print
write.csv(labels, file="neuroblastoma+labels.csv")
# Add name for saving!! This is the DBI evaluation csv print
write.csv(indexes, file="neuroblastoma_DBI.csv")
View(dbscan_smal_labeled_data)
dbscan_smal_labeled_data[["labels"]]
View(dbscan_med_labeled_data)
valid_indices <- which(dbsc_lab$dbscan_smal != 0)
filtered_data <- mydata[valid_indices, ]
filtered_labels <- labels[valid_indices]
filtered_labels <- labels[valid_indices]
filtered_labels <- dbsc_lab$dbscan_smal[valid_indices]
view(filtered_labels)
unique_clusters <- unique(filtered_labels)
result <- list(data = filtered_data, labels = filtered_labels)
View(result)
result <- data.frame(data = filtered_data, labels = filtered_labels)
View(result)
source("~/GitHub/DBI-guide/bin/fix_sets.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/fix_sets.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
View(result)
View(smal_labels)
View(result)
View(dbsc_lab)
dbsc_lab<-dbscan_labels(mydata,eps,minPts)
ab<-fix_sets(mydata, dbsc_lab$dbscan_smal)
View(ab)
aab<-fix_sets(mydata, dbsc_lab$dbscan_med)
View(aab)
aabb<-fix_sets(mydata, dbsc_lab$dbscan_big)
View(aabb)
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
source("~/GitHub/DBI-guide/bin/dbscan_labels.R")
source("~/GitHub/DBI-guide/bin/Neuroblastoma.R")
mydata<-read.csv("Spain_cardiac_arrest.csv")
kNNdistplot(mydata, k = 10) # k is usually set to minPts - 1
abline(h = 3, col = "red") # Manually choose a threshold
source("~/GitHub/DBI-guide/bin/Cardiac_arrest.R")
abline(h = 4, col = "red") # Manually choose a threshold
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/Cardiac_arrest.R")
source("~/GitHub/DBI-guide/bin/Cardiac_arrest.R")
source("~/GitHub/DBI-guide/bin/Cardiac_arrest.R")
source("~/GitHub/DBI-guide/bin/Cardiac_arrest.R")
mydata<-read.csv("Sepsis.csv")
abline(h = 5, col = "red") # Manually choose a threshold
abline(h = 3, col = "red") # Manually choose a threshold
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/Sepsis.R")
source("~/GitHub/DBI-guide/bin/Sepsis.R")
source("~/GitHub/DBI-guide/bin/dbscan_labels.R")
source("~/GitHub/DBI-guide/bin/Sepsis.R")
source("~/GitHub/DBI-guide/bin/Sepsis.R")
source("~/GitHub/DBI-guide/bin/dbscan_labels.R")
source("~/GitHub/DBI-guide/bin/Sepsis.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/Sepsis.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/Sepsis.R")
source("~/GitHub/DBI-guide/bin/Sepsis.R")
source("~/GitHub/DBI-guide/bin/dbscan_labels.R")
source("~/GitHub/DBI-guide/bin/Sepsis.R")
source("~/GitHub/DBI-guide/bin/Sepsis.R")
source("~/GitHub/DBI-guide/bin/Sepsis.R")
source("~/GitHub/DBI-guide/bin/Sepsis.R")
source("~/GitHub/DBI-guide/bin/dbscan_labels.R")
source("~/GitHub/DBI-guide/bin/Sepsis.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/dbscan_labels.R")
source("~/GitHub/DBI-guide/bin/Sepsis.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/dbscan_labels.R")
source("~/GitHub/DBI-guide/bin/Sepsis.R")
source("~/GitHub/DBI-guide/bin/Sepsis.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/dbscan_labels.R")
source("~/GitHub/DBI-guide/bin/Sepsis.R")
source("~/GitHub/DBI-guide/bin/Sepsis.R")
source("~/GitHub/DBI-guide/bin/Sepsis.R")
source("~/GitHub/DBI-guide/bin/dbscan_labels.R")
source("~/GitHub/DBI-guide/bin/Sepsis.R")
#Script where I load an EHRs document(Sepsis) and apply the kmeans clustering
#and my DBI function. Then I save everything on a couple of csv files
#Loading data
mydata<-read.csv("Sepsis.csv")
#getting kmeans labels
km_labels<-kmeans_labels(mydata)
#getting hclust labels
hc_labels<-hclust_labels(mydata)
#Getting dbscan parameters
eps<- 60               #diameter/100
minPts<-60            #ceiling(nrow(mydata)/50)
#getting dbscan labels
dbsc_lab<-dbscan_labels(mydata,eps,minPts)
View(dbsc_lab)
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/findelbow.R")
source("~/GitHub/DBI-guide/bin/dbscan_labels.R")
source("~/GitHub/DBI-guide/bin/Sepsis.R")
source("~/GitHub/DBI-guide/bin/Sepsis.R")
mydata<-read.csv("Sepsis.csv")
#getting kmeans labels
km_labels<-kmeans_labels(mydata)
#getting hclust labels
hc_labels<-hclust_labels(mydata)
#Getting dbscan parameters
eps<- 20              #diameter/100
minPts<-10            #ceiling(nrow(mydata)/50)
#getting dbscan labels
dbsc_lab<-dbscan_labels(mydata,eps,minPts)
View(dbsc_lab)
indexes<-DBI_EHRs(mydata,km_labels,hc_labels,dbsc_lab)
#binding clusterings for printing
labels<-list(mydata,km_labels,hc_labels,dbsc_lab)
# Add name for saving!! This is the data csv print
write.csv(labels, file="Sepsis+labels.csv")
# Add name for saving!! This is the DBI evaluation csv print
write.csv(indexes, file="Sepsis_DBI.csv")
#Script where I load an EHRs document(Sepsis) and apply the kmeans clustering
#and my DBI function. Then I save everything on a couple of csv files
#Loading data
mydata<-read.csv("Sepsis.csv")
#getting kmeans labels
km_labels<-kmeans_labels(mydata)
#getting hclust labels
hc_labels<-hclust_labels(mydata)
#Getting dbscan parameters
eps<- 20              #diameter/100
minPts<-10            #ceiling(nrow(mydata)/50)
#getting dbscan labels
dbsc_lab<-dbscan_labels(mydata,eps,minPts)
# Calculate the four indexes
indexes<-DBI_EHRs(mydata,km_labels,hc_labels,dbsc_lab)
#binding clusterings for printing
labels<-list(mydata,km_labels,hc_labels,dbsc_lab)
# Add name for saving!! This is the data csv print
write.csv(labels, file="Sepsis+labels.csv")
# Add name for saving!! This is the DBI evaluation csv print
write.csv(indexes, file="Sepsis_DBI.csv")
source("~/GitHub/DBI-guide/bin/dbscan_labels.R")
indexes<-DBI_EHRs(mydata,km_labels,hc_labels,dbsc_lab)
View(indexes)
source("~/GitHub/DBI-guide/bin/DBI.R")
source("~/GitHub/DBI-guide/bin/Sepsis.R")
source("~/GitHub/DBI-guide/bin/DBI.R")
source("~/GitHub/DBI-guide/bin/Sepsis.R")
source("~/GitHub/DBI-guide/bin/Sepsis.R")
dbsc_lab<-dbscan_labels(mydata,eps,minPts)
View(dbsc_lab)
indexes<-DBI_EHRs(mydata,km_labels,hc_labels,dbsc_lab)
View(indexes)
data<-mydata
kmeans2 <- DBI(data,km_labels$kmeans_result_2)
kmeans3 <- DBI(data,km_labels$kmeans_result_3)
kmeans5 <- DBI(data,km_labels$kmeans_result_5)
hc_ave  <- DBI(data, hc_labels$labels_average)
hc_comp <- DBI(data, hc_labels$labels_complete)
hc_sing <- DBI(data, hc_labels$labels_single)
hc_ave  <- DBI(data, hc_labels$labels_average)
hc_comp <- DBI(data, hc_labels$labels_complete)
hc_sing <- DBI(data, hc_labels$labels_single)
dbscan_smal_labeled_data <- fix_sets(data, t(dbsc_lab$dbscan_smal))
View(dbscan_smal_labeled_data)
dbscan_med_labeled_data  <- fix_sets(data, t(dbsc_lab$dbscan_med))
dbscan_big_labeled_data  <- fix_sets(data, t(dbsc_lab$dbscan_big))
View(dbscan_big_labeled_data)
View(dbscan_med_labeled_data)
View(dbscan_med_labeled_data)
View(dbscan_med_labeled_data)
View(dbscan_smal_labeled_data)
View(dbscan_big_labeled_data)
View(dbsc_lab)
